(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id," body {\n  align-items: center;\n  font-family: sans-serif;\n  font-size: 15px;\n  font-weight: normal;\n}\n\n.wrapper {\n  align-items: center;\n  max-width: 50%;\n  margin: auto;\n  box-shadow: 0 0 10px #888;\n  padding: 0 20px;\n  background-color: rgb(248, 245, 245);\n}\n\n.list-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: inherit;\n  margin: 0;\n}\n\nul {\n  padding: 0;\n  margin: 0;\n}\n\nli {\n  list-style: none;\n}\n\n.main-panel {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.add-input {\n  width: 95%;\n  border: 1px solid black;\n  font-style: italic;\n}\n\n.add-input,\n.clear-btn {\n  border: none;\n}\n\n.add-input,\n.item-container,\n.clear-btn {\n  padding: 15px;\n  border-bottom: 1px solid #b5b5b5;\n  display: flex;\n}\n\n.clear-btn {\n  color: gray;\n  font-size: 14px;\n  border: none;\n  align-self: center;\n  margin-top: 10px;\n  margin-left: 50px;\n}\n\n.complete {\n  text-decoration: line-through;\n  color: grey;\n}\n\n.text-area {\n  display: none;\n}\n\n.item-container {\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.item-container span,\n.item-container textarea {\n  width: 200px;\n  flex-grow: 1;\n}\n\n.cancel-btn {\n  height: 20px;\n  width: 20px;\n  outline: none;\n  border: none;\n}\n\n.input {\n  outline: none;\n  border: none;\n  width: 100%;\n  background-color: rgb(248, 245, 245);\n} \n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"CAAC;EACC,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,cAAc;EACd,YAAY;EACZ,yBAAyB;EACzB,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,UAAU;EACV,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;;EAEE,YAAY;AACd;;AAEA;;;EAGE,aAAa;EACb,gCAAgC;EAChC,aAAa;AACf;;AAEA;EACE,WAAW;EACX,eAAe;EACf,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,8BAA8B;EAC9B,QAAQ;AACV;;AAEA;;EAEE,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,WAAW;EACX,oCAAoC;AACtC",sourcesContent:[" body {\n  align-items: center;\n  font-family: sans-serif;\n  font-size: 15px;\n  font-weight: normal;\n}\n\n.wrapper {\n  align-items: center;\n  max-width: 50%;\n  margin: auto;\n  box-shadow: 0 0 10px #888;\n  padding: 0 20px;\n  background-color: rgb(248, 245, 245);\n}\n\n.list-title {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: inherit;\n  margin: 0;\n}\n\nul {\n  padding: 0;\n  margin: 0;\n}\n\nli {\n  list-style: none;\n}\n\n.main-panel {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n}\n\n.add-input {\n  width: 95%;\n  border: 1px solid black;\n  font-style: italic;\n}\n\n.add-input,\n.clear-btn {\n  border: none;\n}\n\n.add-input,\n.item-container,\n.clear-btn {\n  padding: 15px;\n  border-bottom: 1px solid #b5b5b5;\n  display: flex;\n}\n\n.clear-btn {\n  color: gray;\n  font-size: 14px;\n  border: none;\n  align-self: center;\n  margin-top: 10px;\n  margin-left: 50px;\n}\n\n.complete {\n  text-decoration: line-through;\n  color: grey;\n}\n\n.text-area {\n  display: none;\n}\n\n.item-container {\n  justify-content: space-between;\n  gap: 5px;\n}\n\n.item-container span,\n.item-container textarea {\n  width: 200px;\n  flex-grow: 1;\n}\n\n.cancel-btn {\n  height: 20px;\n  width: 20px;\n  outline: none;\n  border: none;\n}\n\n.input {\n  outline: none;\n  border: none;\n  width: 100%;\n  background-color: rgb(248, 245, 245);\n} \n\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);o&&a[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},a=[],s=0;s<n.length;s++){var c=n[s],l=o.base?c[0]+o.base:c[0],A=r[l]||0,d="".concat(l," ").concat(A);r[l]=A+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=i(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var c=o(n,i),l=0;l<r.length;l++){var A=t(r[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),i=t.n(o),r=t(569),a=t.n(r),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),p=t.n(d),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;class m{static list=[];constructor(n,e=!1){this.description=n,this.complete=e,this.index=m.list.length,m.list.push(this),this.getList=()=>m.list}update(){this.complete?this.complete=!1:this.complete=!0}}const E=m,g=()=>{const n=document.getElementById("todo-list");n.innerHTML="",E.list.forEach((e=>{const t=document.createElement("li");t.setAttribute("id",e.index),t.classList="item-container",t.innerHTML=`\n    <input class="checkbox" type="checkbox">\n    <input type="text" class="input" value='${e.description}'>\n    <button class="cancel-btn"><i class="fa fa-trash" aria-hidden="true"></i></button>\n    `,n.appendChild(t);const o=t.querySelector("input"),i=t.querySelector(".input"),r=t.querySelector("p"),a=t.querySelector("button");o.addEventListener("change",(()=>{const n=parseInt(t.id,10);E.list[n].update(),i.classList.toggle("complete"),r.classList.toggle("complete"),localStorage.setItem("todoList",JSON.stringify(E.list))})),i.addEventListener("input",(n=>{i.value=n.target.value;const e=parseInt(t.id,10);E.list[e].description=n.target.value,localStorage.setItem("todoList",JSON.stringify(E.list)),"Enter"===n.code&&r.classList.toggle("edit-item")})),a.addEventListener("click",(()=>{const n=parseInt(t.id,10);E.list=E.list.filter((e=>e!==E.list[n])),E.list.forEach(((n,e)=>{n.index=e})),localStorage.setItem("todoList",JSON.stringify(E.list)),g()})),e.complete&&(o.checked=!0,i.classList="complete")}))},C=g,h=JSON.parse(localStorage.getItem("todoList"));h&&h.forEach((n=>new E(n.description,n.complete))),document.getElementById("add-input").addEventListener("keydown",(function(n){if("Enter"===n.key){const n=new E(this.value,!1);localStorage.setItem("todoList",JSON.stringify(n.getList())),this.value="",C()}})),document.getElementById("clear-btn").addEventListener("click",(()=>{E.list=E.list.filter((n=>!1===n.complete)),E.list.forEach(((n,e)=>{n.index=e})),localStorage.setItem("todoList",JSON.stringify(E.list)),C()})),C()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,